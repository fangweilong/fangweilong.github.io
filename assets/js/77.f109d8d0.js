(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{415:function(s,a,t){"use strict";t.r(a);var e=t(0),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("==2020-11-06更新==")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://gitee.com/Teler/docker-warehouse/tree/master/hadoop",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker-compose 脚本地址"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"更新目的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新目的"}},[s._v("#")]),s._v(" 更新目的")]),s._v(" "),a("p",[s._v("原文的解决思路是对的，但是还是有点小问题。使用ip的话要更改好几个地方太麻烦。所以这几天重新试了一遍。")]),s._v(" "),a("h2",{attrs:{id:"步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[s._v("#")]),s._v(" 步骤")]),s._v(" "),a("h3",{attrs:{id:"方法一-更改host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法一-更改host"}},[s._v("#")]),s._v(" 方法一：更改host")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("通过docker ps找到datanode的容器id")])]),s._v(" "),a("li",[a("p",[s._v("编辑本机的hosts文件")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("文件最后追加一行，内容为")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("\n  部署datanode节点的宿主机ip datanode节点容器的id\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("举例：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("宿主机ip：192.168.2.10")])]),s._v(" "),a("li",[a("p",[s._v("容器id：123456")])]),s._v(" "),a("li",[a("p",[s._v("hosts追加内容为")])])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".2.10 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("使hosts生效")])]),s._v(" "),a("li",[a("p",[s._v("window")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("    ipconfig /flushdns\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("centos")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("      /etc/init.d/network restart\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("注意\n"),a("strong",[s._v("容器不能rm或者down，否则需要重新配制hosts。restart、stop、start无影响")])])])]),s._v(" "),a("h3",{attrs:{id:"方法一-部署在同一台服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法一-部署在同一台服务器"}},[s._v("#")]),s._v(" 方法一：部署在同一台服务器")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("==以下为第一版本原文==")]),s._v(" "),a("h1",{attrs:{id:"版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本"}},[s._v("#")]),s._v(" 版本")]),s._v(" "),a("ul",[a("li",[s._v("docker：19.03.12")]),s._v(" "),a("li",[s._v("docker-compose：1.26.2")]),s._v(" "),a("li",[s._v("hadoop：3.2")]),s._v(" "),a("li",[s._v("镜像地址：https://github.com/big-data-europe/docker-hadoop")])]),s._v(" "),a("hr"),s._v(" "),a("h1",{attrs:{id:"报错信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#报错信息"}},[s._v("#")]),s._v(" 报错信息")]),s._v(" "),a("h2",{attrs:{id:"could-only-be-written-to-0-of-the-1-minreplication-nodes-there-are-1-datanode-s-running-and-1-node-s-are-excluded-in-this-operation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#could-only-be-written-to-0-of-the-1-minreplication-nodes-there-are-1-datanode-s-running-and-1-node-s-are-excluded-in-this-operation"}},[s._v("#")]),s._v(" could only be written to 0 of the 1 minReplication nodes. There are 1 datanode(s) running and 1 node(s) are excluded in this operation.")]),s._v(" "),a("hr"),s._v(" "),a("h1",{attrs:{id:"查错"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查错"}},[s._v("#")]),s._v(" 查错")]),s._v(" "),a("h2",{attrs:{id:"网络查到的一些修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络查到的一些修改"}},[s._v("#")]),s._v(" 网络查到的一些修改")]),s._v(" "),a("ul",[a("li",[s._v("删库重新格式化\n"),a("ul",[a("li",[s._v("https://blog.csdn.net/qfxsxhfy/article/details/80909953")]),s._v(" "),a("li",[s._v("在docker中不应该出现这种问题，而且是全新搭建的")])])]),s._v(" "),a("li",[s._v("dfs.replication\n"),a("ul",[a("li",[s._v("修改为相应的节点数量")])])]),s._v(" "),a("li",[s._v("空间不够\n"),a("ul",[a("li",[s._v("删除无效数据或者扩容，这个问题因为我是新搭建的容器所以没出现，如果查找发现是此问题请慎重操作，"),a("strong",[s._v("数据无价")])])])]),s._v(" "),a("li",[s._v("fs.defaultFS\n"),a("ul",[a("li",[s._v("在容器的hadoop.env中已经指定好，所以我也没修改，如果没设置的可以执行设置为hdfs://namenode:9000")]),s._v(" "),a("li",[s._v("如果是单独服务器部署节点，把namenode修改为主服务器的外网ip")])])]),s._v(" "),a("li",[s._v("返回容器节点设置\n"),a("ul",[a("li",[s._v("进容器内部查看，发现hdfs-site.xml中已经添加")])])]),s._v(" "),a("li",[s._v("hosts\n"),a("ul",[a("li",[s._v("添加hadoop节点ip信息到容器的hsots中，这个容器默认添加了")])])])]),s._v(" "),a("hr"),s._v(" "),a("h1",{attrs:{id:"解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决"}},[s._v("#")]),s._v(" 解决")]),s._v(" "),a("p",[s._v("所有网上能找到的问题都试过了，结果都是无法访问。后来想到容器节点和添加hosts步骤。虽然在容器内部添加了，但是在开发机(我本地机器)上可能没办法识别。\n尝试在部署docker的宿主机上修改了一下hosts，果然能访问到了。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/hosts\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 追加")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("namenode 容器内部ip"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" namenode\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("hr"),s._v(" "),a("p",[s._v("PS:我是部署的伪分布式，并非在单独的服务器上修改，如果是部署的多服务器集群模式，需要保证各个容器节点上都能互相访问到。如果以后容器的ip变更，也需要修改hosts文件中的内容。")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("最后吐槽一下，这几天为了解决这个问题，搜到的博客都是抄来抄去，完全不经思考，不知道他们有没有实践过。甚至有的直接删除数据格式化节点")])])}),[],!1,null,null,null);a.default=n.exports}}]);